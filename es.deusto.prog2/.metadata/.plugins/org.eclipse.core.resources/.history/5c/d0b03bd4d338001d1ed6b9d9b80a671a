package es.deusto.prog3.cap00.ejercicios;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Random;

import javax.swing.*;
import java.awt.*;



/** Ejercicio de hilos con ventanas. Programa esta clase para que se cree una ventana
 * que pida un dato de texto al usuario y un bot√≥n de confirmar para que se confirme.
 * Haz que al pulsar el bot√≥n de confirmaci√≥n se llame al procesoConfirmar()
 * que simula un proceso de almacenamiento externo que tarda unos segundos.
 * Observa que hasta que ocurre esta confirmaci√≥n la ventana no responde.
 * 1. Arr√©glalo para que la ventana no se quede "frita" hasta que se acabe de confirmar.
 * 2. Haz que el bot√≥n de "confirmar" no se pueda pulsar dos veces mientras el proceso
 * de confirmaci√≥n se est√© realizando
 * @author andoni.eguiluz @ ingenieria.deusto.es
 */
public class VentanaConfirmacionLenta {

		private static Random r = new Random();
	// Este m√©todo simula un proceso que tarda un tiempo en hacerse (entre 5 y 10 segundos)
	private static void procesoConfirmar() {
		try {
			Thread.sleep( 5000 + 1000*r.nextInt(6) );
		} catch (InterruptedException e) {}
	}
	
	public static void main(String[] args) {
		// TODO Desarrollar la clase de acuerdo a los comentarios de la cabecera
		// ConfiguraciÛn de ventana
		JFrame ventana = new JFrame();
		ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		JPanel pSuperior = new JPanel();
		pSuperior.setBackground(Color.red);
		JTextField tfData = new JTextField("Introduce aquÌ el nombre",50);
		JButton bConfirmar = new JButton("Confirmar");
		pSuperior.add(tfData);
		ventana.add(bConfirmar, BorderLayout.SOUTH);
		ventana.add(pSuperior, BorderLayout.NORTH);
		ventana.setLocation(100,100);
		ventana.setSize(600,400);
		//	Eventos
	//	bConfirmar.addActionListener( new MiAccion() );
		
		bConfirmar.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				Thread t = new Thread(new Runnable() {
					
					@Override
					public void run() {
						System.out.println("boton");
						procesoConfirmar();
						System.out.println("terminado");
						bConfirmar.setEnabled(true);
					}
				});
				t.start();
				bConfirmar.setEnabled(false);
			}
		});
		
		ventana.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosed(WindowEvent e) {
				// TODO Auto-generated method stub
				System.exit(0);
			}
			
		});

		// Lanzamiento
		ventana.setVisible(true);
		System.out.println("Fin");
		
	}
	
	class MiAccion implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			//acciones
		}
	}

}
